---
title: Historische Werte der magnetischen Deklination
keywords:
  - Historische Werte
  - Erdmagnetfeld
  - Deklination
  - GUFM1
---

%h1 Magnetische Deklination 1590-1990

%p
  Für Feng Shui Analysen wird der magnetische Norden des Erbauungsjahrs eines Gebäudes gebraucht. Da das Erdmagnetfeld permanent in Bewegung ist, muss die Verschiebung des magnetischen vom geographischen Nordpol ("Deklination") berücksichtigt werden.

%p
  Für dieses Berechnungsmodell wurden über 80.000 Daten aus historischen Schiffslogbüchern ausgewertet - z.B. der East-India-Trading-Company.

#query-control
  %form(id="query")
    %p
      %input(id="location" name="location" type="text" title="Bitte geben Sie eine Adresse oder die geographischen Koordinaten ein.")
      %input(type="submit" value="Zum Ort springen")
  %p#address

#results-control
  %p
    Deklination im
    %label(for="year") Jahre
    %select(id="year" name="year")
      - 1990.downto(1590) do |year|
        %option{:value => year} #{year}
    %span#declination

#map_canvas

%p
  Das Ergebnis sind dezimal geschriebene Deklinationswerte. Negative Werte bedeuten eine Abweichung der Magnetnadel nach Westen, positive nach Osten

%p
  Der
  %a(href="http://www-app3.gfz-potsdam.de/Declinationcalc/declinationcalc.html") Deklinationsrechner
  vom Helmholtz Institut Potsdam (Deutsches GeoForschungsZentrum GFZ) bietet Werte von 1900 bis 2015.


%p.width-fix
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;

- content_for :sidebar do
  %h2 Quelle:
  %p
    "Four centuries of geomagnetic secular variation from historical records" von Andrew Jackson, Art R. T. Jonkers und Matthew R. Walker, Phil. Trans. Roy. Soc. A (2000) Vol. 358, pp957-990
    %a(href="/downloads/2000-Jackson-957-90.pdf") [download als pdf]

  %h2 Tipps zur Eingabe:
  %p
    Der Ort wird bestimmt, indem im Suchfeld die Adresse oder die Längen- und Breitengrade eingegeben werden. Im Kartenfeld kann die Ortsmarkierung passend verschoben werden.

  %p
    Die Längen- und Breitengrade können dezimal oder in Grad, Minuten etc. eingegeben werden ein (z.B. 2°30' oder 2.5). Die beiden Koordinaten werden mit einem Komma getrennt.

  %h2 Hinter den Kulissen:
  %p
    Das zugrunde liegende FORTRAN-Programm wurde von Jeremy Bloxham geschrieben und von
    %a(href="http://www.glnetworks.de") GL Networks
    als Webservice bereitgestellt und mit Google Maps verbunden.




:javascript
  (function () {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src = "http://maps.googleapis.com/maps/api/js?key=AIzaSyCZ8HIqtIDis85V3B3aofwDVr1j0c-mjTQ&sensor=false&callback=initialize";
    document.body.appendChild(script);
  })();

  function initialize() {
    var queryForm = $('#query');
    var locationElem = $("#location");
    var addressElem = $('#address');
    var declinationElem = $('#declination');
    var yearElem = $('#year');
    var queryControl = $('#query-control').detach()[0];
    var resultsControl = $('#results-control').detach()[0];

    var initialPos = new google.maps.LatLng(52.522, 13.405); // Berlin
    var map = new google.maps.Map(document.getElementById("map_canvas"), {
      center: initialPos,
      zoom: 12,
      panControl: false,
      scaleControl: true,
      zoomControl: true,
      zoomControlOptions: {
        style: google.maps.ZoomControlStyle.SMALL
      },
      streetViewControl: false,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });
    var geocoder = new google.maps.Geocoder();
    var marker = new google.maps.Marker({
      position: initialPos,
      title: 'Markierung',
      map: map,
      draggable: true
    });

    // position controls
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(queryControl);
    map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(resultsControl);

    // Update current position info.
    updateMarkerPosition(initialPos);
    geocodePosition(initialPos);
    gufmQuery(initialPos, yearElem.val());

    // Event handlers
    google.maps.event.addListener(map, 'click', function(mouseEvent) {
      var pos = mouseEvent.latLng;
      marker.setPosition(pos);
      updateMarkerPosition(pos);
      geocodePosition(pos);
      gufmQuery(pos, yearElem.val());
    });

    google.maps.event.addListener(marker, 'dragstart', function() {
      updateMarkerAddress('Warte auf Markierung...');
      declinationElem.html('');
    });

    google.maps.event.addListener(marker, 'drag', function() {
      updateMarkerPosition(marker.getPosition());
    });

    google.maps.event.addListener(marker, 'dragend', function() {
      var pos = marker.getPosition();
      gufmQuery(pos, yearElem.val());
      geocodePosition(pos);
    });

    queryForm.submit(function(e) {
      e.preventDefault();
      geocodeAddress(function (pos) {
        gufmQuery(pos, yearElem.val());
      });
    });

    yearElem.change(function () {
      gufmQuery(marker.getPosition(), yearElem.val());
    });

    // Helper functions
    function geocodeAddress(cb) {
      var location = locationElem.val();
      geocoder.geocode({'address': location}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          map.setCenter(results[0].geometry.location);
          marker.setPosition(results[0].geometry.location);
          geocodePosition(results[0].geometry.location);
          cb(results[0].geometry.location);
        } else {
          alert("Adresse konnte nicht gefunden werden, Google Maps meldet: " + status);
        }
      });
    }

    function geocodePosition(pos) {
      geocoder.geocode({
        latLng: pos
      }, function(responses) {
        if (responses && responses.length > 0) {
          updateMarkerAddress(responses[0].formatted_address);
        } else {
          updateMarkerAddress('Keine bekannte Adresse in der Nähe der Markierung.');
        }
      });
    }

    function updateMarkerPosition(pos) {
      locationElem.val([
        pos.lat().toFixed(4),
        pos.lng().toFixed(4)
      ].join(', '));
    }

    function updateMarkerAddress(str) {
      addressElem.html(str);
    }

    function gufmQuery(pos, year) {
      var source = 'http://gufm.herokuapp.com/?lat=' + pos.lat() +
                   '&lng=' + pos.lng() +
                   '&year=' + year +
                   '&callback=?';

      declinationElem.html('');
      $.getJSON(source, function(result) {
        var reading = result['D'].toFixed(1).replace('.', ',') + '°';
        if (reading.match(/^[0-9]/)) {
          reading = '+' + reading;
        }
        declinationElem.html(reading);
      });
    }
  }
